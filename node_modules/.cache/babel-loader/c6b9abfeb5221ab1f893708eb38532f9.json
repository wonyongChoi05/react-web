{"ast":null,"code":"import _toConsumableArray from\"/Users/choewon-yong/Desktop/memory-test-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/choewon-yong/Desktop/memory-test-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,useMemo,useState}from\"react\";import styles from\"./App.module.scss\";import\"./App.module.scss\";import gsap from\"gsap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// 최초 시작\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),start=_useState2[0],setStart=_useState2[1];// 카드 엘리먼트 배열\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cardEls=_useState4[0],setCardEls=_useState4[1];// 각 카드의 key 역할을 할 아이템을 담은 배열\nvar cards=useMemo(function(){return Array.from(new Array(cardEls.length),function(x,i){return i+1;});},[cardEls]);// 현재 라운드\nvar _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),round=_useState6[0],setRound=_useState6[1];// 목숨\nvar _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),life=_useState8[0],setLife=_useState8[1];// 화면에 출력할 라운드\nvar _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),displayRound=_useState10[0],setDisplayRound=_useState10[1];// 난이도(보드 크기)\nvar _useState11=useState(3),_useState12=_slicedToArray(_useState11,2),difficulty=_useState12[0],setDifficulty=_useState12[1];// 라운드 시작 여부(클릭 가능 여부 결정)\nvar _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),roundRunning=_useState14[0],setRoundRunning=_useState14[1];// 정답\nvar _useState15=useState([\"\"]),_useState16=_slicedToArray(_useState15,2),answer=_useState16[0],setAnswer=_useState16[1];// 정답 개수\nvar _useState17=useState(1),_useState18=_slicedToArray(_useState17,2),answerCount=_useState18[0],setAnswerCount=_useState18[1];// 클릭 횟수\nvar _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),clickCount=_useState20[0],setClickCount=_useState20[1];// 클릭된 카드\nvar _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),clickedCards=_useState22[0],setClickedCards=_useState22[1];// 실패 여부\nvar _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),isFail=_useState24[0],setIsFail=_useState24[1];// 성공 여부\nvar _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),isSuccess=_useState26[0],setIsSuccesss=_useState26[1];// 게임 클리어\nvar _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),gameClear=_useState28[0],setGameClear=_useState28[1];// 라운드 시작 카운트다운\nvar _useState29=useState(4),_useState30=_slicedToArray(_useState29,2),countdown=_useState30[0],setCountdown=_useState30[1];// 게임오버 카운트다운 클리너\nvar _useState31=useState(function(){}),_useState32=_slicedToArray(_useState31,2),endCountdownClear=_useState32[0],setEndCountdownClear=_useState32[1];// 난이도업 딜레이 타이머 클리너\nvar _useState33=useState(function(){}),_useState34=_slicedToArray(_useState33,2),difficultyUpDelayClear=_useState34[0],setDifficultyUpDelayClear=_useState34[1];// gsap\nvar _useState35=useState([]),_useState36=_slicedToArray(_useState35,2),animations=_useState36[0],setAnimations=_useState36[1];// 게임 클리어\nvar clear=useCallback(function(){setGameClear(true);setStart(false);setRoundRunning(false);},[]);// 재시작\nvar restart=function restart(){cardEls.forEach(function(el){el.style.backgroundColor=\"whitesmoke\";el.style.boxShadow=\"none\";el.style.borderColor=\"whitesmoke\";});setGameClear(false);setDisplayRound(0);setClickedCards([]);setClickCount(0);setRound(1);setLife(1);setAnswerCount(1);setDifficulty(3);setIsFail(false);setStart(false);setCountdown(4);};// 다음 라운드 진행 전 초기화\nvar nextRound=useCallback(function(){clearTimeout(endCountdownClear);setClickCount(0);setClickedCards([]);setCountdown(4);setRoundRunning(false);setLife(1);setRound(function(prev){return prev+1;});setAnswerCount(function(prev){return prev+1;});},[endCountdownClear]);// 게임오버\nvar gameover=useCallback(function(){cardEls.forEach(function(el){if(answer.indexOf(el.id)!==-1&&clickedCards.indexOf(el.id)===-1){el.style.backgroundColor=\"whitesmoke\";el.style.boxShadow=\"0px 0px 15px orange, 0px 0px 30px whitesmoke\";el.style.borderColor=\"orange\";}else if(answer.indexOf(el.id)!==-1){el.style.backgroundColor=\"whitesmoke\";el.style.boxShadow=\"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";el.style.borderColor=\"#48cae4\";}else if(answer.indexOf(el.id)===-1&&clickedCards.indexOf(el.id)!==-1){el.style.backgroundColor=\"whitesmoke\";el.style.boxShadow=\"0px 0px 15px #bf1f1f, 0px 0px 30px whitesmoke\";el.style.borderColor=\"#bf1f1f\";}});setIsFail(true);setRoundRunning(false);setClickCount(0);},[answer,cardEls,clickedCards]);// 카드 클릭 함수\nvar onCardClick=useCallback(function(e){// 라운드 시작 전 or 중복 클릭\nif(!roundRunning||clickedCards.indexOf(e.target.id)!==-1){return;}setClickedCards(function(prev){return[].concat(_toConsumableArray(prev),[e.target.id]);});// 디버그용;\n// if (e.target.id === \"1\") {\n// clear();\n// setIsSuccesss(true);\n// nextRound();\n//   return;\n// }\n// 오답일 경우 & 오답 아닐 경우\nif(answer.indexOf(e.target.id)===-1){e.target.style.backgroundColor=\"whitesmoke\";e.target.style.boxShadow=\"0px 0px 15px #bf1f1f, 0px 0px 30px whitesmoke\";e.target.style.borderColor=\"#bf1f1f\";if(life!==0){setLife(0);}else{gameover();clearTimeout(endCountdownClear);}return;}else{e.target.style.backgroundColor=\"whitesmoke\";e.target.style.boxShadow=\"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";e.target.style.borderColor=\"#48cae4\";}// 클릭수와 정답개수가 동일하면 다음 라운드, 아닐 경우 계속 클릭 진행\nif(clickCount+1===answer.length){setIsSuccesss(true);// 난이도 업일 경우 1초 딜레이 후 라운드 진행\nif(round===4||round===12||round===24){var difficultyUpDelay=setTimeout(function(){nextRound();},1000);setDifficultyUpDelayClear(difficultyUpDelay);return;}// 클리어\nif(round===49){clear();return;}nextRound();}else{setClickCount(function(prev){return prev+1;});}},[answer,clear,clickCount,clickedCards,endCountdownClear,gameover,life,nextRound,round,roundRunning]);// 라운드 시간제한\nvar endCountdown=useCallback(function(time){var endTimer=setTimeout(function(){gameover();},time);setEndCountdownClear(endTimer);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// 난이도 업\nvar changeDifficulty=useCallback(function(num){cardEls.forEach(function(el){el.style.backgroundColor=\"whitesmoke\";el.style.boxShadow=\"none\";el.style.borderColor=\"whitesmoke\";});setAnswerCount(1);setDifficulty(num);},[cardEls]);// 라운드 시작\nvar roundStart=useCallback(function(){if(!start){return;}// 난이도 업일 경우 타이머에 시간 추가용 변수\nvar delay=0;// 난이도 업\nif(round===5){delay=1000;setCountdown(5);changeDifficulty(4);setDisplayRound(5);}else if(round===13){delay=1000;setCountdown(5);changeDifficulty(5);setDisplayRound(13);}else if(round===25){delay=1000;setCountdown(5);changeDifficulty(6);setDisplayRound(25);}// 라운드 준비\nvar prepareTimer=setTimeout(function(){setIsSuccesss(false);// 난이도 업이 아니면 여기서 displayRound 증가.\n// 난이도 업이면 위에서 직접 증가시키기 때문에 skip\nif(round!==5&&round!==13&&round!==21){setDisplayRound(function(prev){return prev+1;});}// 색상 초기화\ncardEls.forEach(function(el){el.style.backgroundColor=\"whitesmoke\";el.style.boxShadow=\"none\";el.style.borderColor=\"whitesmoke\";});// 정답 생성\nvar newAnswer=_toConsumableArray(cards).map(function(card){return card.toString();});for(var i=Math.pow(difficulty,2)-answerCount,j=Math.pow(difficulty,2)-1;i!==0;i--,j--){var pick=Math.round(Math.random()*j);newAnswer.splice(pick,1);}setAnswer(newAnswer);// 정답 표시\ncardEls.forEach(function(el){if(newAnswer.indexOf(el.id)!==-1){el.style.backgroundColor=\"whitesmoke\";el.style.boxShadow=\"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";el.style.borderColor=\"#48cae4\";}else{el.style.backgroundColor=\"black\";el.style.borderColor=\"black\";}});},1000+delay);// 시작 카운트다운(출력용)\nvar countdown=setInterval(function(){setCountdown(function(prev){return prev-1;});},1000);//  정답 표시 색상 초기화\nvar colorTimer=setTimeout(function(){cardEls.forEach(function(el){el.style.backgroundColor=\"whitesmoke\";el.style.boxShadow=\"none\";el.style.borderColor=\"whitesmoke\";});},3000+delay);// 시작 카운트다운(계산용)\nvar startTimer=setTimeout(function(){setRoundRunning(true);setCountdown(0);clearTimeout(countdown);},4000+delay);endCountdown(34000+delay);delay=0;return{colorTimer:colorTimer,startTimer:startTimer,countdown:countdown,delayTimer:prepareTimer};},[answerCount,cardEls,cards,changeDifficulty,difficulty,endCountdown,round,start]);// 카드 엘리먼트 불러오기\nuseEffect(function(){setCardEls(document.querySelectorAll(\".\".concat(styles.card)));},[difficulty]);// 카드 반짝반짝 효과\nuseEffect(function(){if(!start&&cardEls.length!==0){var animationArr=[];cardEls.forEach(function(el){animationArr.push(gsap.to(el,cardEls.length/10,{repeat:-1,yoyo:true,delay:parseInt(el.id)/10,backgroundColor:\"whitesmoke\",borderColor:\"#48cae4\",boxShadow:\"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\"}));});setAnimations(function(prev){return[].concat(_toConsumableArray(prev),animationArr);});}},[cardEls,start]);// 게임오버 카운트다운 클리어\nuseEffect(function(){return function(){clearTimeout(endCountdownClear);clearTimeout(difficultyUpDelayClear);};});// 라운드 시작마다 실행\nuseEffect(function(){if(!start){return;}var _roundStart=roundStart(),colorTimer=_roundStart.colorTimer,startTimer=_roundStart.startTimer,countdown=_roundStart.countdown,delayTimer=_roundStart.delayTimer;return function(){clearTimeout(colorTimer);clearTimeout(startTimer);clearTimeout(countdown);clearTimeout(delayTimer);};},[roundStart,start]);// 카드 생성 함수\n// n개의 카드를 n줄 생성한다.\nvar rowsGenerator=useCallback(function(){var rowsReturn=[];// 카드 생성기\nvar cardsGenerator=function cardsGenerator(i){var cardsReturn=[];for(var j=1;j<=difficulty;j++){var id=-difficulty+j+difficulty*i;cardsReturn.push(/*#__PURE__*/_jsx(\"div\",{id:\"\".concat(id),className:styles.card,onClick:onCardClick},\"\".concat(id)));}return cardsReturn;};// 줄 생성기\nfor(var i=1;i<=difficulty;i++){rowsReturn.push(/*#__PURE__*/_jsx(\"div\",{className:styles.row,children:cardsGenerator(i)},i));}return rowsReturn;},[difficulty,onCardClick]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.header,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.round,children:[\"Round \",displayRound]}),/*#__PURE__*/_jsx(\"div\",{className:styles.level,children:displayRound>=25?\"Expert\":displayRound>=13?\"Hard\":displayRound>=5?\"Normal\":\"Easy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.content,children:[(!start||isFail||gameClear)&&/*#__PURE__*/_jsxs(\"div\",{className:styles.start,children:[(isFail||gameClear)&&/*#__PURE__*/_jsxs(\"div\",{className:styles[\"result\"],children:[gameClear&&/*#__PURE__*/_jsx(\"div\",{className:styles[\"clear\"],children:\"Congratulation!\"}),/*#__PURE__*/_jsx(\"div\",{className:styles[\"score__text\"],children:\"Score\"}),/*#__PURE__*/_jsx(\"div\",{className:styles[\"score__round\"],children:round})]}),/*#__PURE__*/_jsx(\"span\",{className:styles[\"start__text\"],style:{fontSize:gameClear||isFail?\"5vmin\":\"20vmin\"},onClick:function onClick(){animations.forEach(function(el){el.kill();});if(isFail||gameClear){restart();}else{setStart(true);}},children:isFail||gameClear?\"Restart\":\"Start\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.status,children:isFail?\"\":isSuccess?round!==5&&round!==13&&round!==25?\"Success\":\"Level up\":start&&(countdown===0?\"Click!\":countdown!==4&&countdown)}),/*#__PURE__*/_jsx(\"div\",{className:styles.board,children:rowsGenerator()})]})]});}export default App;","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","styles","gsap","App","start","setStart","cardEls","setCardEls","cards","Array","from","length","x","i","round","setRound","life","setLife","displayRound","setDisplayRound","difficulty","setDifficulty","roundRunning","setRoundRunning","answer","setAnswer","answerCount","setAnswerCount","clickCount","setClickCount","clickedCards","setClickedCards","isFail","setIsFail","isSuccess","setIsSuccesss","gameClear","setGameClear","countdown","setCountdown","endCountdownClear","setEndCountdownClear","difficultyUpDelayClear","setDifficultyUpDelayClear","animations","setAnimations","clear","restart","forEach","el","style","backgroundColor","boxShadow","borderColor","nextRound","clearTimeout","prev","gameover","indexOf","id","onCardClick","e","target","difficultyUpDelay","setTimeout","endCountdown","time","endTimer","changeDifficulty","num","roundStart","delay","prepareTimer","newAnswer","map","card","toString","j","pick","Math","random","splice","setInterval","colorTimer","startTimer","delayTimer","document","querySelectorAll","animationArr","push","to","repeat","yoyo","parseInt","rowsGenerator","rowsReturn","cardsGenerator","cardsReturn","row","container","header","level","content","fontSize","kill","status","board"],"sources":["/Users/choewon-yong/Desktop/memory-test-master/src/App.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport styles from \"./App.module.scss\";\nimport \"./App.module.scss\";\nimport gsap from \"gsap\";\n\nfunction App() {\n  // 최초 시작\n  const [start, setStart] = useState<boolean>(false);\n  // 카드 엘리먼트 배열\n  const [cardEls, setCardEls] = useState<any>([]);\n  // 각 카드의 key 역할을 할 아이템을 담은 배열\n  const cards = useMemo(\n    () => Array.from(new Array(cardEls.length), (x, i) => i + 1),\n    [cardEls]\n  );\n  // 현재 라운드\n  const [round, setRound] = useState<number>(1);\n  // 목숨\n  const [life, setLife] = useState<number>(1);\n  // 화면에 출력할 라운드\n  const [displayRound, setDisplayRound] = useState<number>(0);\n  // 난이도(보드 크기)\n  const [difficulty, setDifficulty] = useState<number>(3);\n  // 라운드 시작 여부(클릭 가능 여부 결정)\n  const [roundRunning, setRoundRunning] = useState<boolean>(false);\n  // 정답\n  const [answer, setAnswer] = useState<Array<string | number>>([\"\"]);\n  // 정답 개수\n  const [answerCount, setAnswerCount] = useState<number>(1);\n  // 클릭 횟수\n  const [clickCount, setClickCount] = useState<number>(0);\n  // 클릭된 카드\n  const [clickedCards, setClickedCards] = useState<Array<string>>([]);\n  // 실패 여부\n  const [isFail, setIsFail] = useState<boolean>(false);\n  // 성공 여부\n  const [isSuccess, setIsSuccesss] = useState<boolean>(false);\n  // 게임 클리어\n  const [gameClear, setGameClear] = useState<boolean>(false);\n  // 라운드 시작 카운트다운\n  const [countdown, setCountdown] = useState<number>(4);\n  // 게임오버 카운트다운 클리너\n  const [endCountdownClear, setEndCountdownClear] = useState<any>(() => {});\n  // 난이도업 딜레이 타이머 클리너\n  const [difficultyUpDelayClear, setDifficultyUpDelayClear] = useState<any>(\n    () => {}\n  );\n  // gsap\n  const [animations, setAnimations] = useState<Array<any>>([]);\n\n  // 게임 클리어\n  const clear = useCallback(() => {\n    setGameClear(true);\n    setStart(false);\n    setRoundRunning(false);\n  }, []);\n\n  // 재시작\n  const restart = () => {\n    cardEls.forEach((el: any) => {\n      el.style.backgroundColor = \"whitesmoke\";\n      el.style.boxShadow = \"none\";\n      el.style.borderColor = \"whitesmoke\";\n    });\n    setGameClear(false);\n    setDisplayRound(0);\n    setClickedCards([]);\n    setClickCount(0);\n    setRound(1);\n    setLife(1);\n    setAnswerCount(1);\n    setDifficulty(3);\n    setIsFail(false);\n    setStart(false);\n    setCountdown(4);\n  };\n\n  // 다음 라운드 진행 전 초기화\n  const nextRound = useCallback(() => {\n    clearTimeout(endCountdownClear);\n    setClickCount(0);\n    setClickedCards([]);\n    setCountdown(4);\n    setRoundRunning(false);\n    setLife(1);\n    setRound((prev) => prev + 1);\n    setAnswerCount((prev) => prev + 1);\n  }, [endCountdownClear]);\n\n  // 게임오버\n  const gameover = useCallback(() => {\n    cardEls.forEach((el: any) => {\n      if (answer.indexOf(el.id) !== -1 && clickedCards.indexOf(el.id) === -1) {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"0px 0px 15px orange, 0px 0px 30px whitesmoke\";\n        el.style.borderColor = \"orange\";\n      } else if (answer.indexOf(el.id) !== -1) {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";\n        el.style.borderColor = \"#48cae4\";\n      } else if (\n        answer.indexOf(el.id) === -1 &&\n        clickedCards.indexOf(el.id) !== -1\n      ) {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"0px 0px 15px #bf1f1f, 0px 0px 30px whitesmoke\";\n        el.style.borderColor = \"#bf1f1f\";\n      }\n    });\n    setIsFail(true);\n    setRoundRunning(false);\n    setClickCount(0);\n  }, [answer, cardEls, clickedCards]);\n\n  // 카드 클릭 함수\n  const onCardClick = useCallback(\n    (e: any) => {\n      // 라운드 시작 전 or 중복 클릭\n      if (!roundRunning || clickedCards.indexOf(e.target.id) !== -1) {\n        return;\n      }\n\n      setClickedCards((prev) => [...prev, e.target.id]);\n\n      // 디버그용;\n      // if (e.target.id === \"1\") {\n      // clear();\n      // setIsSuccesss(true);\n\n      // nextRound();\n      //   return;\n      // }\n\n      // 오답일 경우 & 오답 아닐 경우\n      if (answer.indexOf(e.target.id) === -1) {\n        e.target.style.backgroundColor = \"whitesmoke\";\n        e.target.style.boxShadow =\n          \"0px 0px 15px #bf1f1f, 0px 0px 30px whitesmoke\";\n        e.target.style.borderColor = \"#bf1f1f\";\n\n        if (life !== 0) {\n          setLife(0);\n        } else {\n          gameover();\n          clearTimeout(endCountdownClear);\n        }\n\n        return;\n      } else {\n        e.target.style.backgroundColor = \"whitesmoke\";\n        e.target.style.boxShadow =\n          \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";\n        e.target.style.borderColor = \"#48cae4\";\n      }\n\n      // 클릭수와 정답개수가 동일하면 다음 라운드, 아닐 경우 계속 클릭 진행\n      if (clickCount + 1 === answer.length) {\n        setIsSuccesss(true);\n\n        // 난이도 업일 경우 1초 딜레이 후 라운드 진행\n        if (round === 4 || round === 12 || round === 24) {\n          const difficultyUpDelay = setTimeout(() => {\n            nextRound();\n          }, 1000);\n\n          setDifficultyUpDelayClear(difficultyUpDelay);\n\n          return;\n        }\n\n        // 클리어\n        if (round === 49) {\n          clear();\n\n          return;\n        }\n\n        nextRound();\n      } else {\n        setClickCount((prev) => prev + 1);\n      }\n    },\n    [answer, clear, clickCount, clickedCards, endCountdownClear, gameover, life, nextRound, round, roundRunning]\n  );\n\n  // 라운드 시간제한\n  const endCountdown = useCallback((time: number) => {\n    const endTimer = setTimeout(() => {\n      gameover();\n    }, time);\n\n    setEndCountdownClear(endTimer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // 난이도 업\n  const changeDifficulty = useCallback(\n    (num: number) => {\n      cardEls.forEach((el: any) => {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"none\";\n        el.style.borderColor = \"whitesmoke\";\n      });\n\n      setAnswerCount(1);\n      setDifficulty(num);\n    },\n    [cardEls]\n  );\n\n  // 라운드 시작\n  const roundStart = useCallback(() => {\n    if (!start) {\n      return;\n    }\n\n    // 난이도 업일 경우 타이머에 시간 추가용 변수\n    let delay = 0;\n\n    // 난이도 업\n    if (round === 5) {\n      delay = 1000;\n      setCountdown(5);\n      changeDifficulty(4);\n      setDisplayRound(5);\n    } else if (round === 13) {\n      delay = 1000;\n      setCountdown(5);\n      changeDifficulty(5);\n      setDisplayRound(13);\n    } else if (round === 25) {\n      delay = 1000;\n      setCountdown(5);\n      changeDifficulty(6);\n      setDisplayRound(25);\n    }\n\n    // 라운드 준비\n    const prepareTimer = setTimeout(() => {\n      setIsSuccesss(false);\n\n      // 난이도 업이 아니면 여기서 displayRound 증가.\n      // 난이도 업이면 위에서 직접 증가시키기 때문에 skip\n      if (round !== 5 && round !== 13 && round !== 21) {\n        setDisplayRound((prev) => prev + 1);\n      }\n\n      // 색상 초기화\n      cardEls.forEach((el: any) => {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"none\";\n        el.style.borderColor = \"whitesmoke\";\n      });\n\n      // 정답 생성\n      const newAnswer = [...cards].map((card) => card.toString());\n      for (\n        let i = difficulty ** 2 - answerCount, j = difficulty ** 2 - 1;\n        i !== 0;\n        i--, j--\n      ) {\n        const pick = Math.round(Math.random() * j);\n        newAnswer.splice(pick, 1);\n      }\n\n      setAnswer(newAnswer);\n\n      // 정답 표시\n      cardEls.forEach((el: any) => {\n        if (newAnswer.indexOf(el.id) !== -1) {\n          el.style.backgroundColor = \"whitesmoke\";\n          el.style.boxShadow = \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";\n          el.style.borderColor = \"#48cae4\";\n        } else {\n          el.style.backgroundColor = \"black\";\n          el.style.borderColor = \"black\";\n        }\n      });\n    }, 1000 + delay);\n\n    // 시작 카운트다운(출력용)\n    const countdown = setInterval(() => {\n      setCountdown((prev) => prev - 1);\n    }, 1000);\n\n    //  정답 표시 색상 초기화\n    const colorTimer = setTimeout(() => {\n      cardEls.forEach((el: any) => {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"none\";\n        el.style.borderColor = \"whitesmoke\";\n      });\n    }, 3000 + delay);\n\n    // 시작 카운트다운(계산용)\n    const startTimer = setTimeout(() => {\n      setRoundRunning(true);\n      setCountdown(0);\n      clearTimeout(countdown);\n    }, 4000 + delay);\n\n    endCountdown(34000 + delay);\n\n    delay = 0;\n\n    return { colorTimer, startTimer, countdown, delayTimer: prepareTimer };\n  }, [\n    answerCount,\n    cardEls,\n    cards,\n    changeDifficulty,\n    difficulty,\n    endCountdown,\n    round,\n    start,\n  ]);\n\n  // 카드 엘리먼트 불러오기\n  useEffect(() => {\n    setCardEls(document.querySelectorAll(`.${styles.card}`));\n  }, [difficulty]);\n\n  // 카드 반짝반짝 효과\n  useEffect(() => {\n    if (!start && cardEls.length !== 0) {\n      const animationArr: Array<any> = [];\n\n      cardEls.forEach((el: any) => {\n        animationArr.push(\n          gsap.to(el, cardEls.length / 10, {\n            repeat: -1,\n            yoyo: true,\n            delay: parseInt(el.id) / 10,\n            backgroundColor: \"whitesmoke\",\n            borderColor: \"#48cae4\",\n            boxShadow: \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\",\n          })\n        );\n      });\n\n      setAnimations((prev) => [...prev, ...animationArr]);\n    }\n  }, [cardEls, start]);\n\n  // 게임오버 카운트다운 클리어\n  useEffect(() => {\n    return () => {\n      clearTimeout(endCountdownClear);\n      clearTimeout(difficultyUpDelayClear);\n    };\n  });\n\n  // 라운드 시작마다 실행\n  useEffect(() => {\n    if (!start) {\n      return;\n    }\n\n    const { colorTimer, startTimer, countdown, delayTimer }: any = roundStart();\n\n    return () => {\n      clearTimeout(colorTimer);\n      clearTimeout(startTimer);\n      clearTimeout(countdown);\n      clearTimeout(delayTimer);\n    };\n  }, [roundStart, start]);\n\n  // 카드 생성 함수\n  // n개의 카드를 n줄 생성한다.\n  const rowsGenerator = useCallback(() => {\n    const rowsReturn: Array<any> = [];\n\n    // 카드 생성기\n    const cardsGenerator = (i: number) => {\n      const cardsReturn: Array<any> = [];\n\n      for (let j = 1; j <= difficulty; j++) {\n        const id = -difficulty + j + difficulty * i;\n        cardsReturn.push(\n          <div\n            id={`${id}`}\n            key={`${id}`}\n            className={styles.card}\n            onClick={onCardClick}\n          ></div>\n        );\n      }\n\n      return cardsReturn;\n    };\n\n    // 줄 생성기\n    for (let i = 1; i <= difficulty; i++) {\n      rowsReturn.push(\n        <div key={i} className={styles.row}>\n          {/* 카드 생성 */}\n          {cardsGenerator(i)}\n        </div>\n      );\n    }\n\n    return rowsReturn;\n  }, [difficulty, onCardClick]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <div className={styles.round}>Round {displayRound}</div>\n        <div className={styles.level}>\n          {displayRound >= 25\n            ? \"Expert\"\n            : displayRound >= 13\n            ? \"Hard\"\n            : displayRound >= 5\n            ? \"Normal\"\n            : \"Easy\"}\n        </div>\n      </div>\n\n      <div className={styles.content}>\n        {(!start || isFail || gameClear) && (\n          <div className={styles.start}>\n            {(isFail || gameClear) && (\n              <div className={styles[\"result\"]}>\n                {gameClear && (\n                  <div className={styles[\"clear\"]}>Congratulation!</div>\n                )}\n                <div className={styles[\"score__text\"]}>Score</div>\n                <div className={styles[\"score__round\"]}>{round}</div>\n              </div>\n            )}\n            <span\n              className={styles[\"start__text\"]}\n              style={{ fontSize: gameClear || isFail ? \"5vmin\" : \"20vmin\" }}\n              onClick={() => {\n                animations.forEach((el) => {\n                  el.kill();\n                });\n                if (isFail || gameClear) {\n                  restart();\n                } else {\n                  setStart(true);\n                }\n              }}\n            >\n              {isFail || gameClear ? \"Restart\" : \"Start\"}\n            </span>\n          </div>\n        )}\n        <div className={styles.status}>\n          {isFail\n            ? \"\"\n            : isSuccess\n            ? round !== 5 && round !== 13 && round !== 25\n              ? \"Success\"\n              : \"Level up\"\n            : start &&\n              (countdown === 0 ? \"Click!\" : countdown !== 4 && countdown)}\n        </div>\n        <div className={styles.board}>{rowsGenerator()}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}