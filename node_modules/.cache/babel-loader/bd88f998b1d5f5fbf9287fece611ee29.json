{"ast":null,"code":"var _jsxFileName = \"/Users/choewon-yong/Desktop/memory-test-master/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport styles from \"./App.module.scss\";\nimport \"./App.module.scss\";\nimport gsap from \"gsap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // 최초 시작\n  const [start, setStart] = useState(false); // 카드 엘리먼트 배열\n\n  const [cardEls, setCardEls] = useState([]); // 각 카드의 key 역할을 할 아이템을 담은 배열\n\n  const cards = useMemo(() => Array.from(new Array(cardEls.length), (x, i) => i + 1), [cardEls]); // 현재 라운드\n\n  const [round, setRound] = useState(1); // 목숨\n\n  const [life, setLife] = useState(1); // 화면에 출력할 라운드\n\n  const [displayRound, setDisplayRound] = useState(0); // 난이도(보드 크기)\n\n  const [difficulty, setDifficulty] = useState(3); // 라운드 시작 여부(클릭 가능 여부 결정)\n\n  const [roundRunning, setRoundRunning] = useState(false); // 정답\n\n  const [answer, setAnswer] = useState([\"\"]); // 정답 개수\n\n  const [answerCount, setAnswerCount] = useState(1); // 클릭 횟수\n\n  const [clickCount, setClickCount] = useState(0); // 클릭된 카드\n\n  const [clickedCards, setClickedCards] = useState([]); // 실패 여부\n\n  const [isFail, setIsFail] = useState(false); // 성공 여부\n\n  const [isSuccess, setIsSuccesss] = useState(false); // 게임 클리어\n\n  const [gameClear, setGameClear] = useState(false); // 라운드 시작 카운트다운\n\n  const [countdown, setCountdown] = useState(4); // 게임오버 카운트다운 클리너\n\n  const [endCountdownClear, setEndCountdownClear] = useState(() => {}); // 난이도업 딜레이 타이머 클리너\n\n  const [difficultyUpDelayClear, setDifficultyUpDelayClear] = useState(() => {}); // gsap\n\n  const [animations, setAnimations] = useState([]); // 게임 클리어\n\n  const clear = useCallback(() => {\n    setGameClear(true);\n    setStart(false);\n    setRoundRunning(false);\n  }, []); // 재시작\n\n  const restart = () => {\n    cardEls.forEach(el => {\n      el.style.backgroundColor = \"whitesmoke\";\n      el.style.boxShadow = \"none\";\n      el.style.borderColor = \"whitesmoke\";\n    });\n    setGameClear(false);\n    setDisplayRound(0);\n    setClickedCards([]);\n    setClickCount(0);\n    setRound(1);\n    setLife(1);\n    setAnswerCount(1);\n    setDifficulty(3);\n    setIsFail(false);\n    setStart(false);\n    setCountdown(4);\n  }; // 다음 라운드 진행 전 초기화\n\n\n  const nextRound = useCallback(() => {\n    clearTimeout(endCountdownClear);\n    setClickCount(0);\n    setClickedCards([]);\n    setCountdown(4);\n    setRoundRunning(false);\n    setLife(1);\n    setRound(prev => prev + 1);\n    setAnswerCount(prev => prev + 1);\n  }, [endCountdownClear]); // 게임오버\n\n  const gameover = useCallback(() => {\n    cardEls.forEach(el => {\n      if (answer.indexOf(el.id) !== -1 && clickedCards.indexOf(el.id) === -1) {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"0px 0px 15px orange, 0px 0px 30px whitesmoke\";\n        el.style.borderColor = \"orange\";\n      } else if (answer.indexOf(el.id) !== -1) {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";\n        el.style.borderColor = \"#48cae4\";\n      } else if (answer.indexOf(el.id) === -1 && clickedCards.indexOf(el.id) !== -1) {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"0px 0px 15px #bf1f1f, 0px 0px 30px whitesmoke\";\n        el.style.borderColor = \"#bf1f1f\";\n      }\n    });\n    setIsFail(true);\n    setRoundRunning(false);\n    setClickCount(0);\n  }, [answer, cardEls, clickedCards]); // 카드 클릭 함수\n\n  const onCardClick = useCallback(e => {\n    // 라운드 시작 전 or 중복 클릭\n    if (!roundRunning || clickedCards.indexOf(e.target.id) !== -1) {\n      return;\n    }\n\n    setClickedCards(prev => [...prev, e.target.id]); // 디버그용;\n    // if (e.target.id === \"1\") {\n    // clear();\n    // setIsSuccesss(true);\n    // nextRound();\n    //   return;\n    // }\n    // 오답일 경우 & 오답 아닐 경우\n\n    if (answer.indexOf(e.target.id) === -1) {\n      e.target.style.backgroundColor = \"whitesmoke\";\n      e.target.style.boxShadow = \"0px 0px 15px #bf1f1f, 0px 0px 30px whitesmoke\";\n      e.target.style.borderColor = \"#bf1f1f\";\n\n      if (life !== 0) {\n        setLife(0);\n      } else {\n        gameover();\n        clearTimeout(endCountdownClear);\n      }\n\n      return;\n    } else {\n      e.target.style.backgroundColor = \"whitesmoke\";\n      e.target.style.boxShadow = \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";\n      e.target.style.borderColor = \"#48cae4\";\n    } // 클릭수와 정답개수가 동일하면 다음 라운드, 아닐 경우 계속 클릭 진행\n\n\n    if (clickCount + 1 === answer.length) {\n      setIsSuccesss(true); // 난이도 업일 경우 1초 딜레이 후 라운드 진행\n\n      if (round === 4 || round === 12 || round === 24) {\n        const difficultyUpDelay = setTimeout(() => {\n          nextRound();\n        }, 1000);\n        setDifficultyUpDelayClear(difficultyUpDelay);\n        return;\n      } // 클리어\n\n\n      if (round === 49) {\n        clear();\n        return;\n      }\n\n      nextRound();\n    } else {\n      setClickCount(prev => prev + 1);\n    }\n  }, [answer, clear, clickCount, clickedCards, endCountdownClear, gameover, life, nextRound, round, roundRunning]); // 라운드 시간제한\n\n  const endCountdown = useCallback(time => {\n    const endTimer = setTimeout(() => {\n      gameover();\n    }, time);\n    setEndCountdownClear(endTimer); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // 난이도 업\n\n  const changeDifficulty = useCallback(num => {\n    cardEls.forEach(el => {\n      el.style.backgroundColor = \"whitesmoke\";\n      el.style.boxShadow = \"none\";\n      el.style.borderColor = \"whitesmoke\";\n    });\n    setAnswerCount(1);\n    setDifficulty(num);\n  }, [cardEls]); // 라운드 시작\n\n  const roundStart = useCallback(() => {\n    if (!start) {\n      return;\n    } // 난이도 업일 경우 타이머에 시간 추가용 변수\n\n\n    let delay = 0; // 난이도 업\n\n    if (round === 5) {\n      delay = 1000;\n      setCountdown(5);\n      changeDifficulty(4);\n      setDisplayRound(5);\n    } else if (round === 13) {\n      delay = 1000;\n      setCountdown(5);\n      changeDifficulty(5);\n      setDisplayRound(13);\n    } else if (round === 25) {\n      delay = 1000;\n      setCountdown(5);\n      changeDifficulty(6);\n      setDisplayRound(25);\n    } // 라운드 준비\n\n\n    const prepareTimer = setTimeout(() => {\n      setIsSuccesss(false); // 난이도 업이 아니면 여기서 displayRound 증가.\n      // 난이도 업이면 위에서 직접 증가시키기 때문에 skip\n\n      if (round !== 5 && round !== 13 && round !== 21) {\n        setDisplayRound(prev => prev + 1);\n      } // 색상 초기화\n\n\n      cardEls.forEach(el => {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"none\";\n        el.style.borderColor = \"whitesmoke\";\n      }); // 정답 생성\n\n      const newAnswer = [...cards].map(card => card.toString());\n\n      for (let i = difficulty ** 2 - answerCount, j = difficulty ** 2 - 1; i !== 0; i--, j--) {\n        const pick = Math.round(Math.random() * j);\n        newAnswer.splice(pick, 1);\n      }\n\n      setAnswer(newAnswer); // 정답 표시\n\n      cardEls.forEach(el => {\n        if (newAnswer.indexOf(el.id) !== -1) {\n          el.style.backgroundColor = \"whitesmoke\";\n          el.style.boxShadow = \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";\n          el.style.borderColor = \"#48cae4\";\n        } else {\n          el.style.backgroundColor = \"black\";\n          el.style.borderColor = \"black\";\n        }\n      });\n    }, 1000 + delay); // 시작 카운트다운(출력용)\n\n    const countdown = setInterval(() => {\n      setCountdown(prev => prev - 1);\n    }, 1000); //  정답 표시 색상 초기화\n\n    const colorTimer = setTimeout(() => {\n      cardEls.forEach(el => {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"none\";\n        el.style.borderColor = \"whitesmoke\";\n      });\n    }, 3000 + delay); // 시작 카운트다운(계산용)\n\n    const startTimer = setTimeout(() => {\n      setRoundRunning(true);\n      setCountdown(0);\n      clearTimeout(countdown);\n    }, 4000 + delay);\n    endCountdown(34000 + delay);\n    delay = 0;\n    return {\n      colorTimer,\n      startTimer,\n      countdown,\n      delayTimer: prepareTimer\n    };\n  }, [answerCount, cardEls, cards, changeDifficulty, difficulty, endCountdown, round, start]); // 카드 엘리먼트 불러오기\n\n  useEffect(() => {\n    setCardEls(document.querySelectorAll(`.${styles.card}`));\n  }, [difficulty]); // 카드 반짝반짝 효과\n\n  useEffect(() => {\n    if (!start && cardEls.length !== 0) {\n      const animationArr = [];\n      cardEls.forEach(el => {\n        animationArr.push(gsap.to(el, cardEls.length / 10, {\n          repeat: -1,\n          yoyo: true,\n          delay: parseInt(el.id) / 10,\n          backgroundColor: \"whitesmoke\",\n          borderColor: \"#48cae4\",\n          boxShadow: \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\"\n        }));\n      });\n      setAnimations(prev => [...prev, ...animationArr]);\n    }\n  }, [cardEls, start]); // 게임오버 카운트다운 클리어\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(endCountdownClear);\n      clearTimeout(difficultyUpDelayClear);\n    };\n  }); // 라운드 시작마다 실행\n\n  useEffect(() => {\n    if (!start) {\n      return;\n    }\n\n    const {\n      colorTimer,\n      startTimer,\n      countdown,\n      delayTimer\n    } = roundStart();\n    return () => {\n      clearTimeout(colorTimer);\n      clearTimeout(startTimer);\n      clearTimeout(countdown);\n      clearTimeout(delayTimer);\n    };\n  }, [roundStart, start]); // 카드 생성 함수\n  // n개의 카드를 n줄 생성한다.\n\n  const rowsGenerator = useCallback(() => {\n    const rowsReturn = []; // 카드 생성기\n\n    const cardsGenerator = i => {\n      const cardsReturn = [];\n\n      for (let j = 1; j <= difficulty; j++) {\n        const id = -difficulty + j + difficulty * i;\n        cardsReturn.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${id}`,\n          className: styles.card,\n          onClick: onCardClick\n        }, `${id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this));\n      }\n\n      return cardsReturn;\n    }; // 줄 생성기\n\n\n    for (let i = 1; i <= difficulty; i++) {\n      rowsReturn.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: cardsGenerator(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this));\n    }\n\n    return rowsReturn;\n  }, [difficulty, onCardClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.round,\n        children: [\"Round \", displayRound]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.level,\n        children: displayRound >= 25 ? \"Expert\" : displayRound >= 13 ? \"Hard\" : displayRound >= 5 ? \"Normal\" : \"Easy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [(!start || isFail || gameClear) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.start,\n        children: [(isFail || gameClear) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"result\"],\n          children: [gameClear && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"clear\"],\n            children: \"Congratulation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"score__text\"],\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"score__round\"],\n            children: round\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles[\"start__text\"],\n          style: {\n            fontSize: gameClear || isFail ? \"5vmin\" : \"20vmin\"\n          },\n          onClick: () => {\n            animations.forEach(el => {\n              el.kill();\n            });\n\n            if (isFail || gameClear) {\n              restart();\n            } else {\n              setStart(true);\n            }\n          },\n          children: isFail || gameClear ? \"Restart\" : \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.status,\n        children: isFail ? \"\" : isSuccess ? round !== 5 && round !== 13 && round !== 25 ? \"Success\" : \"Level up\" : start && (countdown === 0 ? \"Click!\" : countdown !== 4 && countdown)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.board,\n        children: rowsGenerator()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MZeADkCjPnk1xOFCDZwJeBB556Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","styles","gsap","App","start","setStart","cardEls","setCardEls","cards","Array","from","length","x","i","round","setRound","life","setLife","displayRound","setDisplayRound","difficulty","setDifficulty","roundRunning","setRoundRunning","answer","setAnswer","answerCount","setAnswerCount","clickCount","setClickCount","clickedCards","setClickedCards","isFail","setIsFail","isSuccess","setIsSuccesss","gameClear","setGameClear","countdown","setCountdown","endCountdownClear","setEndCountdownClear","difficultyUpDelayClear","setDifficultyUpDelayClear","animations","setAnimations","clear","restart","forEach","el","style","backgroundColor","boxShadow","borderColor","nextRound","clearTimeout","prev","gameover","indexOf","id","onCardClick","e","target","difficultyUpDelay","setTimeout","endCountdown","time","endTimer","changeDifficulty","num","roundStart","delay","prepareTimer","newAnswer","map","card","toString","j","pick","Math","random","splice","setInterval","colorTimer","startTimer","delayTimer","document","querySelectorAll","animationArr","push","to","repeat","yoyo","parseInt","rowsGenerator","rowsReturn","cardsGenerator","cardsReturn","row","container","header","level","content","fontSize","kill","status","board"],"sources":["/Users/choewon-yong/Desktop/memory-test-master/src/App.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport styles from \"./App.module.scss\";\nimport \"./App.module.scss\";\nimport gsap from \"gsap\";\n\nfunction App() {\n  // 최초 시작\n  const [start, setStart] = useState<boolean>(false);\n  // 카드 엘리먼트 배열\n  const [cardEls, setCardEls] = useState<any>([]);\n  // 각 카드의 key 역할을 할 아이템을 담은 배열\n  const cards = useMemo(\n    () => Array.from(new Array(cardEls.length), (x, i) => i + 1),\n    [cardEls]\n  );\n  // 현재 라운드\n  const [round, setRound] = useState<number>(1);\n  // 목숨\n  const [life, setLife] = useState<number>(1);\n  // 화면에 출력할 라운드\n  const [displayRound, setDisplayRound] = useState<number>(0);\n  // 난이도(보드 크기)\n  const [difficulty, setDifficulty] = useState<number>(3);\n  // 라운드 시작 여부(클릭 가능 여부 결정)\n  const [roundRunning, setRoundRunning] = useState<boolean>(false);\n  // 정답\n  const [answer, setAnswer] = useState<Array<string | number>>([\"\"]);\n  // 정답 개수\n  const [answerCount, setAnswerCount] = useState<number>(1);\n  // 클릭 횟수\n  const [clickCount, setClickCount] = useState<number>(0);\n  // 클릭된 카드\n  const [clickedCards, setClickedCards] = useState<Array<string>>([]);\n  // 실패 여부\n  const [isFail, setIsFail] = useState<boolean>(false);\n  // 성공 여부\n  const [isSuccess, setIsSuccesss] = useState<boolean>(false);\n  // 게임 클리어\n  const [gameClear, setGameClear] = useState<boolean>(false);\n  // 라운드 시작 카운트다운\n  const [countdown, setCountdown] = useState<number>(4);\n  // 게임오버 카운트다운 클리너\n  const [endCountdownClear, setEndCountdownClear] = useState<any>(() => {});\n  // 난이도업 딜레이 타이머 클리너\n  const [difficultyUpDelayClear, setDifficultyUpDelayClear] = useState<any>(\n    () => {}\n  );\n  // gsap\n  const [animations, setAnimations] = useState<Array<any>>([]);\n\n  // 게임 클리어\n  const clear = useCallback(() => {\n    setGameClear(true);\n    setStart(false);\n    setRoundRunning(false);\n  }, []);\n\n  // 재시작\n  const restart = () => {\n    cardEls.forEach((el: any) => {\n      el.style.backgroundColor = \"whitesmoke\";\n      el.style.boxShadow = \"none\";\n      el.style.borderColor = \"whitesmoke\";\n    });\n    setGameClear(false);\n    setDisplayRound(0);\n    setClickedCards([]);\n    setClickCount(0);\n    setRound(1);\n    setLife(1);\n    setAnswerCount(1);\n    setDifficulty(3);\n    setIsFail(false);\n    setStart(false);\n    setCountdown(4);\n  };\n\n  // 다음 라운드 진행 전 초기화\n  const nextRound = useCallback(() => {\n    clearTimeout(endCountdownClear);\n    setClickCount(0);\n    setClickedCards([]);\n    setCountdown(4);\n    setRoundRunning(false);\n    setLife(1);\n    setRound((prev) => prev + 1);\n    setAnswerCount((prev) => prev + 1);\n  }, [endCountdownClear]);\n\n  // 게임오버\n  const gameover = useCallback(() => {\n    cardEls.forEach((el: any) => {\n      if (answer.indexOf(el.id) !== -1 && clickedCards.indexOf(el.id) === -1) {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"0px 0px 15px orange, 0px 0px 30px whitesmoke\";\n        el.style.borderColor = \"orange\";\n      } else if (answer.indexOf(el.id) !== -1) {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";\n        el.style.borderColor = \"#48cae4\";\n      } else if (\n        answer.indexOf(el.id) === -1 &&\n        clickedCards.indexOf(el.id) !== -1\n      ) {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"0px 0px 15px #bf1f1f, 0px 0px 30px whitesmoke\";\n        el.style.borderColor = \"#bf1f1f\";\n      }\n    });\n    setIsFail(true);\n    setRoundRunning(false);\n    setClickCount(0);\n  }, [answer, cardEls, clickedCards]);\n\n  // 카드 클릭 함수\n  const onCardClick = useCallback(\n    (e: any) => {\n      // 라운드 시작 전 or 중복 클릭\n      if (!roundRunning || clickedCards.indexOf(e.target.id) !== -1) {\n        return;\n      }\n\n      setClickedCards((prev) => [...prev, e.target.id]);\n\n      // 디버그용;\n      // if (e.target.id === \"1\") {\n      // clear();\n      // setIsSuccesss(true);\n\n      // nextRound();\n      //   return;\n      // }\n\n      // 오답일 경우 & 오답 아닐 경우\n      if (answer.indexOf(e.target.id) === -1) {\n        e.target.style.backgroundColor = \"whitesmoke\";\n        e.target.style.boxShadow =\n          \"0px 0px 15px #bf1f1f, 0px 0px 30px whitesmoke\";\n        e.target.style.borderColor = \"#bf1f1f\";\n\n        if (life !== 0) {\n          setLife(0);\n        } else {\n          gameover();\n          clearTimeout(endCountdownClear);\n        }\n\n        return;\n      } else {\n        e.target.style.backgroundColor = \"whitesmoke\";\n        e.target.style.boxShadow =\n          \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";\n        e.target.style.borderColor = \"#48cae4\";\n      }\n\n      // 클릭수와 정답개수가 동일하면 다음 라운드, 아닐 경우 계속 클릭 진행\n      if (clickCount + 1 === answer.length) {\n        setIsSuccesss(true);\n\n        // 난이도 업일 경우 1초 딜레이 후 라운드 진행\n        if (round === 4 || round === 12 || round === 24) {\n          const difficultyUpDelay = setTimeout(() => {\n            nextRound();\n          }, 1000);\n\n          setDifficultyUpDelayClear(difficultyUpDelay);\n\n          return;\n        }\n\n        // 클리어\n        if (round === 49) {\n          clear();\n\n          return;\n        }\n\n        nextRound();\n      } else {\n        setClickCount((prev) => prev + 1);\n      }\n    },\n    [answer, clear, clickCount, clickedCards, endCountdownClear, gameover, life, nextRound, round, roundRunning]\n  );\n\n  // 라운드 시간제한\n  const endCountdown = useCallback((time: number) => {\n    const endTimer = setTimeout(() => {\n      gameover();\n    }, time);\n\n    setEndCountdownClear(endTimer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // 난이도 업\n  const changeDifficulty = useCallback(\n    (num: number) => {\n      cardEls.forEach((el: any) => {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"none\";\n        el.style.borderColor = \"whitesmoke\";\n      });\n\n      setAnswerCount(1);\n      setDifficulty(num);\n    },\n    [cardEls]\n  );\n\n  // 라운드 시작\n  const roundStart = useCallback(() => {\n    if (!start) {\n      return;\n    }\n\n    // 난이도 업일 경우 타이머에 시간 추가용 변수\n    let delay = 0;\n\n    // 난이도 업\n    if (round === 5) {\n      delay = 1000;\n      setCountdown(5);\n      changeDifficulty(4);\n      setDisplayRound(5);\n    } else if (round === 13) {\n      delay = 1000;\n      setCountdown(5);\n      changeDifficulty(5);\n      setDisplayRound(13);\n    } else if (round === 25) {\n      delay = 1000;\n      setCountdown(5);\n      changeDifficulty(6);\n      setDisplayRound(25);\n    }\n\n    // 라운드 준비\n    const prepareTimer = setTimeout(() => {\n      setIsSuccesss(false);\n\n      // 난이도 업이 아니면 여기서 displayRound 증가.\n      // 난이도 업이면 위에서 직접 증가시키기 때문에 skip\n      if (round !== 5 && round !== 13 && round !== 21) {\n        setDisplayRound((prev) => prev + 1);\n      }\n\n      // 색상 초기화\n      cardEls.forEach((el: any) => {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"none\";\n        el.style.borderColor = \"whitesmoke\";\n      });\n\n      // 정답 생성\n      const newAnswer = [...cards].map((card) => card.toString());\n      for (\n        let i = difficulty ** 2 - answerCount, j = difficulty ** 2 - 1;\n        i !== 0;\n        i--, j--\n      ) {\n        const pick = Math.round(Math.random() * j);\n        newAnswer.splice(pick, 1);\n      }\n\n      setAnswer(newAnswer);\n\n      // 정답 표시\n      cardEls.forEach((el: any) => {\n        if (newAnswer.indexOf(el.id) !== -1) {\n          el.style.backgroundColor = \"whitesmoke\";\n          el.style.boxShadow = \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\";\n          el.style.borderColor = \"#48cae4\";\n        } else {\n          el.style.backgroundColor = \"black\";\n          el.style.borderColor = \"black\";\n        }\n      });\n    }, 1000 + delay);\n\n    // 시작 카운트다운(출력용)\n    const countdown = setInterval(() => {\n      setCountdown((prev) => prev - 1);\n    }, 1000);\n\n    //  정답 표시 색상 초기화\n    const colorTimer = setTimeout(() => {\n      cardEls.forEach((el: any) => {\n        el.style.backgroundColor = \"whitesmoke\";\n        el.style.boxShadow = \"none\";\n        el.style.borderColor = \"whitesmoke\";\n      });\n    }, 3000 + delay);\n\n    // 시작 카운트다운(계산용)\n    const startTimer = setTimeout(() => {\n      setRoundRunning(true);\n      setCountdown(0);\n      clearTimeout(countdown);\n    }, 4000 + delay);\n\n    endCountdown(34000 + delay);\n\n    delay = 0;\n\n    return { colorTimer, startTimer, countdown, delayTimer: prepareTimer };\n  }, [\n    answerCount,\n    cardEls,\n    cards,\n    changeDifficulty,\n    difficulty,\n    endCountdown,\n    round,\n    start,\n  ]);\n\n  // 카드 엘리먼트 불러오기\n  useEffect(() => {\n    setCardEls(document.querySelectorAll(`.${styles.card}`));\n  }, [difficulty]);\n\n  // 카드 반짝반짝 효과\n  useEffect(() => {\n    if (!start && cardEls.length !== 0) {\n      const animationArr: Array<any> = [];\n\n      cardEls.forEach((el: any) => {\n        animationArr.push(\n          gsap.to(el, cardEls.length / 10, {\n            repeat: -1,\n            yoyo: true,\n            delay: parseInt(el.id) / 10,\n            backgroundColor: \"whitesmoke\",\n            borderColor: \"#48cae4\",\n            boxShadow: \"0px 0px 15px #48cae4, 0px 0px 30px whitesmoke\",\n          })\n        );\n      });\n\n      setAnimations((prev) => [...prev, ...animationArr]);\n    }\n  }, [cardEls, start]);\n\n  // 게임오버 카운트다운 클리어\n  useEffect(() => {\n    return () => {\n      clearTimeout(endCountdownClear);\n      clearTimeout(difficultyUpDelayClear);\n    };\n  });\n\n  // 라운드 시작마다 실행\n  useEffect(() => {\n    if (!start) {\n      return;\n    }\n\n    const { colorTimer, startTimer, countdown, delayTimer }: any = roundStart();\n\n    return () => {\n      clearTimeout(colorTimer);\n      clearTimeout(startTimer);\n      clearTimeout(countdown);\n      clearTimeout(delayTimer);\n    };\n  }, [roundStart, start]);\n\n  // 카드 생성 함수\n  // n개의 카드를 n줄 생성한다.\n  const rowsGenerator = useCallback(() => {\n    const rowsReturn: Array<any> = [];\n\n    // 카드 생성기\n    const cardsGenerator = (i: number) => {\n      const cardsReturn: Array<any> = [];\n\n      for (let j = 1; j <= difficulty; j++) {\n        const id = -difficulty + j + difficulty * i;\n        cardsReturn.push(\n          <div\n            id={`${id}`}\n            key={`${id}`}\n            className={styles.card}\n            onClick={onCardClick}\n          ></div>\n        );\n      }\n\n      return cardsReturn;\n    };\n\n    // 줄 생성기\n    for (let i = 1; i <= difficulty; i++) {\n      rowsReturn.push(\n        <div key={i} className={styles.row}>\n          {/* 카드 생성 */}\n          {cardsGenerator(i)}\n        </div>\n      );\n    }\n\n    return rowsReturn;\n  }, [difficulty, onCardClick]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <div className={styles.round}>Round {displayRound}</div>\n        <div className={styles.level}>\n          {displayRound >= 25\n            ? \"Expert\"\n            : displayRound >= 13\n            ? \"Hard\"\n            : displayRound >= 5\n            ? \"Normal\"\n            : \"Easy\"}\n        </div>\n      </div>\n\n      <div className={styles.content}>\n        {(!start || isFail || gameClear) && (\n          <div className={styles.start}>\n            {(isFail || gameClear) && (\n              <div className={styles[\"result\"]}>\n                {gameClear && (\n                  <div className={styles[\"clear\"]}>Congratulation!</div>\n                )}\n                <div className={styles[\"score__text\"]}>Score</div>\n                <div className={styles[\"score__round\"]}>{round}</div>\n              </div>\n            )}\n            <span\n              className={styles[\"start__text\"]}\n              style={{ fontSize: gameClear || isFail ? \"5vmin\" : \"20vmin\" }}\n              onClick={() => {\n                animations.forEach((el) => {\n                  el.kill();\n                });\n                if (isFail || gameClear) {\n                  restart();\n                } else {\n                  setStart(true);\n                }\n              }}\n            >\n              {isFail || gameClear ? \"Restart\" : \"Start\"}\n            </span>\n          </div>\n        )}\n        <div className={styles.status}>\n          {isFail\n            ? \"\"\n            : isSuccess\n            ? round !== 5 && round !== 13 && round !== 25\n              ? \"Success\"\n              : \"Level up\"\n            : start &&\n              (countdown === 0 ? \"Click!\" : countdown !== 4 && countdown)}\n        </div>\n        <div className={styles.board}>{rowsGenerator()}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAU,KAAV,CAAlC,CAFa,CAGb;;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAM,EAAN,CAAtC,CAJa,CAKb;;EACA,MAAMQ,KAAK,GAAGT,OAAO,CACnB,MAAMU,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAUH,OAAO,CAACK,MAAlB,CAAX,EAAsC,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,CAApD,CADa,EAEnB,CAACP,OAAD,CAFmB,CAArB,CANa,CAUb;;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAS,CAAT,CAAlC,CAXa,CAYb;;EACA,MAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAS,CAAT,CAAhC,CAba,CAcb;;EACA,MAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAS,CAAT,CAAhD,CAfa,CAgBb;;EACA,MAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAS,CAAT,CAA5C,CAjBa,CAkBb;;EACA,MAAM,CAACsB,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAU,KAAV,CAAhD,CAnBa,CAoBb;;EACA,MAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAyB,CAAC,EAAD,CAAzB,CAApC,CArBa,CAsBb;;EACA,MAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAS,CAAT,CAA9C,CAvBa,CAwBb;;EACA,MAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAS,CAAT,CAA5C,CAzBa,CA0Bb;;EACA,MAAM,CAAC8B,YAAD,EAAeC,eAAf,IAAkC/B,QAAQ,CAAgB,EAAhB,CAAhD,CA3Ba,CA4Bb;;EACA,MAAM,CAACgC,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CAAU,KAAV,CAApC,CA7Ba,CA8Bb;;EACA,MAAM,CAACkC,SAAD,EAAYC,aAAZ,IAA6BnC,QAAQ,CAAU,KAAV,CAA3C,CA/Ba,CAgCb;;EACA,MAAM,CAACoC,SAAD,EAAYC,YAAZ,IAA4BrC,QAAQ,CAAU,KAAV,CAA1C,CAjCa,CAkCb;;EACA,MAAM,CAACsC,SAAD,EAAYC,YAAZ,IAA4BvC,QAAQ,CAAS,CAAT,CAA1C,CAnCa,CAoCb;;EACA,MAAM,CAACwC,iBAAD,EAAoBC,oBAApB,IAA4CzC,QAAQ,CAAM,MAAM,CAAE,CAAd,CAA1D,CArCa,CAsCb;;EACA,MAAM,CAAC0C,sBAAD,EAAyBC,yBAAzB,IAAsD3C,QAAQ,CAClE,MAAM,CAAE,CAD0D,CAApE,CAvCa,CA0Cb;;EACA,MAAM,CAAC4C,UAAD,EAAaC,aAAb,IAA8B7C,QAAQ,CAAa,EAAb,CAA5C,CA3Ca,CA6Cb;;EACA,MAAM8C,KAAK,GAAGjD,WAAW,CAAC,MAAM;IAC9BwC,YAAY,CAAC,IAAD,CAAZ;IACAhC,QAAQ,CAAC,KAAD,CAAR;IACAkB,eAAe,CAAC,KAAD,CAAf;EACD,CAJwB,EAItB,EAJsB,CAAzB,CA9Ca,CAoDb;;EACA,MAAMwB,OAAO,GAAG,MAAM;IACpBzC,OAAO,CAAC0C,OAAR,CAAiBC,EAAD,IAAa;MAC3BA,EAAE,CAACC,KAAH,CAASC,eAAT,GAA2B,YAA3B;MACAF,EAAE,CAACC,KAAH,CAASE,SAAT,GAAqB,MAArB;MACAH,EAAE,CAACC,KAAH,CAASG,WAAT,GAAuB,YAAvB;IACD,CAJD;IAKAhB,YAAY,CAAC,KAAD,CAAZ;IACAlB,eAAe,CAAC,CAAD,CAAf;IACAY,eAAe,CAAC,EAAD,CAAf;IACAF,aAAa,CAAC,CAAD,CAAb;IACAd,QAAQ,CAAC,CAAD,CAAR;IACAE,OAAO,CAAC,CAAD,CAAP;IACAU,cAAc,CAAC,CAAD,CAAd;IACAN,aAAa,CAAC,CAAD,CAAb;IACAY,SAAS,CAAC,KAAD,CAAT;IACA5B,QAAQ,CAAC,KAAD,CAAR;IACAkC,YAAY,CAAC,CAAD,CAAZ;EACD,CAjBD,CArDa,CAwEb;;;EACA,MAAMe,SAAS,GAAGzD,WAAW,CAAC,MAAM;IAClC0D,YAAY,CAACf,iBAAD,CAAZ;IACAX,aAAa,CAAC,CAAD,CAAb;IACAE,eAAe,CAAC,EAAD,CAAf;IACAQ,YAAY,CAAC,CAAD,CAAZ;IACAhB,eAAe,CAAC,KAAD,CAAf;IACAN,OAAO,CAAC,CAAD,CAAP;IACAF,QAAQ,CAAEyC,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAR;IACA7B,cAAc,CAAE6B,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAd;EACD,CAT4B,EAS1B,CAAChB,iBAAD,CAT0B,CAA7B,CAzEa,CAoFb;;EACA,MAAMiB,QAAQ,GAAG5D,WAAW,CAAC,MAAM;IACjCS,OAAO,CAAC0C,OAAR,CAAiBC,EAAD,IAAa;MAC3B,IAAIzB,MAAM,CAACkC,OAAP,CAAeT,EAAE,CAACU,EAAlB,MAA0B,CAAC,CAA3B,IAAgC7B,YAAY,CAAC4B,OAAb,CAAqBT,EAAE,CAACU,EAAxB,MAAgC,CAAC,CAArE,EAAwE;QACtEV,EAAE,CAACC,KAAH,CAASC,eAAT,GAA2B,YAA3B;QACAF,EAAE,CAACC,KAAH,CAASE,SAAT,GAAqB,8CAArB;QACAH,EAAE,CAACC,KAAH,CAASG,WAAT,GAAuB,QAAvB;MACD,CAJD,MAIO,IAAI7B,MAAM,CAACkC,OAAP,CAAeT,EAAE,CAACU,EAAlB,MAA0B,CAAC,CAA/B,EAAkC;QACvCV,EAAE,CAACC,KAAH,CAASC,eAAT,GAA2B,YAA3B;QACAF,EAAE,CAACC,KAAH,CAASE,SAAT,GAAqB,+CAArB;QACAH,EAAE,CAACC,KAAH,CAASG,WAAT,GAAuB,SAAvB;MACD,CAJM,MAIA,IACL7B,MAAM,CAACkC,OAAP,CAAeT,EAAE,CAACU,EAAlB,MAA0B,CAAC,CAA3B,IACA7B,YAAY,CAAC4B,OAAb,CAAqBT,EAAE,CAACU,EAAxB,MAAgC,CAAC,CAF5B,EAGL;QACAV,EAAE,CAACC,KAAH,CAASC,eAAT,GAA2B,YAA3B;QACAF,EAAE,CAACC,KAAH,CAASE,SAAT,GAAqB,+CAArB;QACAH,EAAE,CAACC,KAAH,CAASG,WAAT,GAAuB,SAAvB;MACD;IACF,CAjBD;IAkBApB,SAAS,CAAC,IAAD,CAAT;IACAV,eAAe,CAAC,KAAD,CAAf;IACAM,aAAa,CAAC,CAAD,CAAb;EACD,CAtB2B,EAsBzB,CAACL,MAAD,EAASlB,OAAT,EAAkBwB,YAAlB,CAtByB,CAA5B,CArFa,CA6Gb;;EACA,MAAM8B,WAAW,GAAG/D,WAAW,CAC5BgE,CAAD,IAAY;IACV;IACA,IAAI,CAACvC,YAAD,IAAiBQ,YAAY,CAAC4B,OAAb,CAAqBG,CAAC,CAACC,MAAF,CAASH,EAA9B,MAAsC,CAAC,CAA5D,EAA+D;MAC7D;IACD;;IAED5B,eAAe,CAAEyB,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUK,CAAC,CAACC,MAAF,CAASH,EAAnB,CAAX,CAAf,CANU,CAQV;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;;IACA,IAAInC,MAAM,CAACkC,OAAP,CAAeG,CAAC,CAACC,MAAF,CAASH,EAAxB,MAAgC,CAAC,CAArC,EAAwC;MACtCE,CAAC,CAACC,MAAF,CAASZ,KAAT,CAAeC,eAAf,GAAiC,YAAjC;MACAU,CAAC,CAACC,MAAF,CAASZ,KAAT,CAAeE,SAAf,GACE,+CADF;MAEAS,CAAC,CAACC,MAAF,CAASZ,KAAT,CAAeG,WAAf,GAA6B,SAA7B;;MAEA,IAAIrC,IAAI,KAAK,CAAb,EAAgB;QACdC,OAAO,CAAC,CAAD,CAAP;MACD,CAFD,MAEO;QACLwC,QAAQ;QACRF,YAAY,CAACf,iBAAD,CAAZ;MACD;;MAED;IACD,CAdD,MAcO;MACLqB,CAAC,CAACC,MAAF,CAASZ,KAAT,CAAeC,eAAf,GAAiC,YAAjC;MACAU,CAAC,CAACC,MAAF,CAASZ,KAAT,CAAeE,SAAf,GACE,+CADF;MAEAS,CAAC,CAACC,MAAF,CAASZ,KAAT,CAAeG,WAAf,GAA6B,SAA7B;IACD,CArCS,CAuCV;;;IACA,IAAIzB,UAAU,GAAG,CAAb,KAAmBJ,MAAM,CAACb,MAA9B,EAAsC;MACpCwB,aAAa,CAAC,IAAD,CAAb,CADoC,CAGpC;;MACA,IAAIrB,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,EAAzB,IAA+BA,KAAK,KAAK,EAA7C,EAAiD;QAC/C,MAAMiD,iBAAiB,GAAGC,UAAU,CAAC,MAAM;UACzCV,SAAS;QACV,CAFmC,EAEjC,IAFiC,CAApC;QAIAX,yBAAyB,CAACoB,iBAAD,CAAzB;QAEA;MACD,CAZmC,CAcpC;;;MACA,IAAIjD,KAAK,KAAK,EAAd,EAAkB;QAChBgC,KAAK;QAEL;MACD;;MAEDQ,SAAS;IACV,CAtBD,MAsBO;MACLzB,aAAa,CAAE2B,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAb;IACD;EACF,CAlE4B,EAmE7B,CAAChC,MAAD,EAASsB,KAAT,EAAgBlB,UAAhB,EAA4BE,YAA5B,EAA0CU,iBAA1C,EAA6DiB,QAA7D,EAAuEzC,IAAvE,EAA6EsC,SAA7E,EAAwFxC,KAAxF,EAA+FQ,YAA/F,CAnE6B,CAA/B,CA9Ga,CAoLb;;EACA,MAAM2C,YAAY,GAAGpE,WAAW,CAAEqE,IAAD,IAAkB;IACjD,MAAMC,QAAQ,GAAGH,UAAU,CAAC,MAAM;MAChCP,QAAQ;IACT,CAF0B,EAExBS,IAFwB,CAA3B;IAIAzB,oBAAoB,CAAC0B,QAAD,CAApB,CALiD,CAMjD;EACD,CAP+B,EAO7B,EAP6B,CAAhC,CArLa,CA8Lb;;EACA,MAAMC,gBAAgB,GAAGvE,WAAW,CACjCwE,GAAD,IAAiB;IACf/D,OAAO,CAAC0C,OAAR,CAAiBC,EAAD,IAAa;MAC3BA,EAAE,CAACC,KAAH,CAASC,eAAT,GAA2B,YAA3B;MACAF,EAAE,CAACC,KAAH,CAASE,SAAT,GAAqB,MAArB;MACAH,EAAE,CAACC,KAAH,CAASG,WAAT,GAAuB,YAAvB;IACD,CAJD;IAMA1B,cAAc,CAAC,CAAD,CAAd;IACAN,aAAa,CAACgD,GAAD,CAAb;EACD,CAViC,EAWlC,CAAC/D,OAAD,CAXkC,CAApC,CA/La,CA6Mb;;EACA,MAAMgE,UAAU,GAAGzE,WAAW,CAAC,MAAM;IACnC,IAAI,CAACO,KAAL,EAAY;MACV;IACD,CAHkC,CAKnC;;;IACA,IAAImE,KAAK,GAAG,CAAZ,CANmC,CAQnC;;IACA,IAAIzD,KAAK,KAAK,CAAd,EAAiB;MACfyD,KAAK,GAAG,IAAR;MACAhC,YAAY,CAAC,CAAD,CAAZ;MACA6B,gBAAgB,CAAC,CAAD,CAAhB;MACAjD,eAAe,CAAC,CAAD,CAAf;IACD,CALD,MAKO,IAAIL,KAAK,KAAK,EAAd,EAAkB;MACvByD,KAAK,GAAG,IAAR;MACAhC,YAAY,CAAC,CAAD,CAAZ;MACA6B,gBAAgB,CAAC,CAAD,CAAhB;MACAjD,eAAe,CAAC,EAAD,CAAf;IACD,CALM,MAKA,IAAIL,KAAK,KAAK,EAAd,EAAkB;MACvByD,KAAK,GAAG,IAAR;MACAhC,YAAY,CAAC,CAAD,CAAZ;MACA6B,gBAAgB,CAAC,CAAD,CAAhB;MACAjD,eAAe,CAAC,EAAD,CAAf;IACD,CAxBkC,CA0BnC;;;IACA,MAAMqD,YAAY,GAAGR,UAAU,CAAC,MAAM;MACpC7B,aAAa,CAAC,KAAD,CAAb,CADoC,CAGpC;MACA;;MACA,IAAIrB,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,EAAzB,IAA+BA,KAAK,KAAK,EAA7C,EAAiD;QAC/CK,eAAe,CAAEqC,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAf;MACD,CAPmC,CASpC;;;MACAlD,OAAO,CAAC0C,OAAR,CAAiBC,EAAD,IAAa;QAC3BA,EAAE,CAACC,KAAH,CAASC,eAAT,GAA2B,YAA3B;QACAF,EAAE,CAACC,KAAH,CAASE,SAAT,GAAqB,MAArB;QACAH,EAAE,CAACC,KAAH,CAASG,WAAT,GAAuB,YAAvB;MACD,CAJD,EAVoC,CAgBpC;;MACA,MAAMoB,SAAS,GAAG,CAAC,GAAGjE,KAAJ,EAAWkE,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAACC,QAAL,EAAzB,CAAlB;;MACA,KACE,IAAI/D,CAAC,GAAGO,UAAU,IAAI,CAAd,GAAkBM,WAA1B,EAAuCmD,CAAC,GAAGzD,UAAU,IAAI,CAAd,GAAkB,CAD/D,EAEEP,CAAC,KAAK,CAFR,EAGEA,CAAC,IAAIgE,CAAC,EAHR,EAIE;QACA,MAAMC,IAAI,GAAGC,IAAI,CAACjE,KAAL,CAAWiE,IAAI,CAACC,MAAL,KAAgBH,CAA3B,CAAb;QACAJ,SAAS,CAACQ,MAAV,CAAiBH,IAAjB,EAAuB,CAAvB;MACD;;MAEDrD,SAAS,CAACgD,SAAD,CAAT,CA3BoC,CA6BpC;;MACAnE,OAAO,CAAC0C,OAAR,CAAiBC,EAAD,IAAa;QAC3B,IAAIwB,SAAS,CAACf,OAAV,CAAkBT,EAAE,CAACU,EAArB,MAA6B,CAAC,CAAlC,EAAqC;UACnCV,EAAE,CAACC,KAAH,CAASC,eAAT,GAA2B,YAA3B;UACAF,EAAE,CAACC,KAAH,CAASE,SAAT,GAAqB,+CAArB;UACAH,EAAE,CAACC,KAAH,CAASG,WAAT,GAAuB,SAAvB;QACD,CAJD,MAIO;UACLJ,EAAE,CAACC,KAAH,CAASC,eAAT,GAA2B,OAA3B;UACAF,EAAE,CAACC,KAAH,CAASG,WAAT,GAAuB,OAAvB;QACD;MACF,CATD;IAUD,CAxC8B,EAwC5B,OAAOkB,KAxCqB,CAA/B,CA3BmC,CAqEnC;;IACA,MAAMjC,SAAS,GAAG4C,WAAW,CAAC,MAAM;MAClC3C,YAAY,CAAEiB,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAZ;IACD,CAF4B,EAE1B,IAF0B,CAA7B,CAtEmC,CA0EnC;;IACA,MAAM2B,UAAU,GAAGnB,UAAU,CAAC,MAAM;MAClC1D,OAAO,CAAC0C,OAAR,CAAiBC,EAAD,IAAa;QAC3BA,EAAE,CAACC,KAAH,CAASC,eAAT,GAA2B,YAA3B;QACAF,EAAE,CAACC,KAAH,CAASE,SAAT,GAAqB,MAArB;QACAH,EAAE,CAACC,KAAH,CAASG,WAAT,GAAuB,YAAvB;MACD,CAJD;IAKD,CAN4B,EAM1B,OAAOkB,KANmB,CAA7B,CA3EmC,CAmFnC;;IACA,MAAMa,UAAU,GAAGpB,UAAU,CAAC,MAAM;MAClCzC,eAAe,CAAC,IAAD,CAAf;MACAgB,YAAY,CAAC,CAAD,CAAZ;MACAgB,YAAY,CAACjB,SAAD,CAAZ;IACD,CAJ4B,EAI1B,OAAOiC,KAJmB,CAA7B;IAMAN,YAAY,CAAC,QAAQM,KAAT,CAAZ;IAEAA,KAAK,GAAG,CAAR;IAEA,OAAO;MAAEY,UAAF;MAAcC,UAAd;MAA0B9C,SAA1B;MAAqC+C,UAAU,EAAEb;IAAjD,CAAP;EACD,CA/F6B,EA+F3B,CACD9C,WADC,EAEDpB,OAFC,EAGDE,KAHC,EAID4D,gBAJC,EAKDhD,UALC,EAMD6C,YANC,EAODnD,KAPC,EAQDV,KARC,CA/F2B,CAA9B,CA9Ma,CAwTb;;EACAN,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC+E,QAAQ,CAACC,gBAAT,CAA2B,IAAGtF,MAAM,CAAC0E,IAAK,EAA1C,CAAD,CAAV;EACD,CAFQ,EAEN,CAACvD,UAAD,CAFM,CAAT,CAzTa,CA6Tb;;EACAtB,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,KAAD,IAAUE,OAAO,CAACK,MAAR,KAAmB,CAAjC,EAAoC;MAClC,MAAM6E,YAAwB,GAAG,EAAjC;MAEAlF,OAAO,CAAC0C,OAAR,CAAiBC,EAAD,IAAa;QAC3BuC,YAAY,CAACC,IAAb,CACEvF,IAAI,CAACwF,EAAL,CAAQzC,EAAR,EAAY3C,OAAO,CAACK,MAAR,GAAiB,EAA7B,EAAiC;UAC/BgF,MAAM,EAAE,CAAC,CADsB;UAE/BC,IAAI,EAAE,IAFyB;UAG/BrB,KAAK,EAAEsB,QAAQ,CAAC5C,EAAE,CAACU,EAAJ,CAAR,GAAkB,EAHM;UAI/BR,eAAe,EAAE,YAJc;UAK/BE,WAAW,EAAE,SALkB;UAM/BD,SAAS,EAAE;QANoB,CAAjC,CADF;MAUD,CAXD;MAaAP,aAAa,CAAEW,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAU,GAAGgC,YAAb,CAAX,CAAb;IACD;EACF,CAnBQ,EAmBN,CAAClF,OAAD,EAAUF,KAAV,CAnBM,CAAT,CA9Ta,CAmVb;;EACAN,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXyD,YAAY,CAACf,iBAAD,CAAZ;MACAe,YAAY,CAACb,sBAAD,CAAZ;IACD,CAHD;EAID,CALQ,CAAT,CApVa,CA2Vb;;EACA5C,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,KAAL,EAAY;MACV;IACD;;IAED,MAAM;MAAE+E,UAAF;MAAcC,UAAd;MAA0B9C,SAA1B;MAAqC+C;IAArC,IAAyDf,UAAU,EAAzE;IAEA,OAAO,MAAM;MACXf,YAAY,CAAC4B,UAAD,CAAZ;MACA5B,YAAY,CAAC6B,UAAD,CAAZ;MACA7B,YAAY,CAACjB,SAAD,CAAZ;MACAiB,YAAY,CAAC8B,UAAD,CAAZ;IACD,CALD;EAMD,CAbQ,EAaN,CAACf,UAAD,EAAalE,KAAb,CAbM,CAAT,CA5Va,CA2Wb;EACA;;EACA,MAAM0F,aAAa,GAAGjG,WAAW,CAAC,MAAM;IACtC,MAAMkG,UAAsB,GAAG,EAA/B,CADsC,CAGtC;;IACA,MAAMC,cAAc,GAAInF,CAAD,IAAe;MACpC,MAAMoF,WAAuB,GAAG,EAAhC;;MAEA,KAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIzD,UAArB,EAAiCyD,CAAC,EAAlC,EAAsC;QACpC,MAAMlB,EAAE,GAAG,CAACvC,UAAD,GAAcyD,CAAd,GAAkBzD,UAAU,GAAGP,CAA1C;QACAoF,WAAW,CAACR,IAAZ,eACE;UACE,EAAE,EAAG,GAAE9B,EAAG,EADZ;UAGE,SAAS,EAAE1D,MAAM,CAAC0E,IAHpB;UAIE,OAAO,EAAEf;QAJX,GAEQ,GAAED,EAAG,EAFb;UAAA;UAAA;UAAA;QAAA,QADF;MAQD;;MAED,OAAOsC,WAAP;IACD,CAhBD,CAJsC,CAsBtC;;;IACA,KAAK,IAAIpF,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIO,UAArB,EAAiCP,CAAC,EAAlC,EAAsC;MACpCkF,UAAU,CAACN,IAAX,eACE;QAAa,SAAS,EAAExF,MAAM,CAACiG,GAA/B;QAAA,UAEGF,cAAc,CAACnF,CAAD;MAFjB,GAAUA,CAAV;QAAA;QAAA;QAAA;MAAA,QADF;IAMD;;IAED,OAAOkF,UAAP;EACD,CAjCgC,EAiC9B,CAAC3E,UAAD,EAAawC,WAAb,CAjC8B,CAAjC;EAmCA,oBACE;IAAK,SAAS,EAAE3D,MAAM,CAACkG,SAAvB;IAAA,wBACE;MAAK,SAAS,EAAElG,MAAM,CAACmG,MAAvB;MAAA,wBACE;QAAK,SAAS,EAAEnG,MAAM,CAACa,KAAvB;QAAA,qBAAqCI,YAArC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAEjB,MAAM,CAACoG,KAAvB;QAAA,UACGnF,YAAY,IAAI,EAAhB,GACG,QADH,GAEGA,YAAY,IAAI,EAAhB,GACA,MADA,GAEAA,YAAY,IAAI,CAAhB,GACA,QADA,GAEA;MAPN;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAK,SAAS,EAAEjB,MAAM,CAACqG,OAAvB;MAAA,WACG,CAAC,CAAClG,KAAD,IAAU4B,MAAV,IAAoBI,SAArB,kBACC;QAAK,SAAS,EAAEnC,MAAM,CAACG,KAAvB;QAAA,WACG,CAAC4B,MAAM,IAAII,SAAX,kBACC;UAAK,SAAS,EAAEnC,MAAM,CAAC,QAAD,CAAtB;UAAA,WACGmC,SAAS,iBACR;YAAK,SAAS,EAAEnC,MAAM,CAAC,OAAD,CAAtB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAIE;YAAK,SAAS,EAAEA,MAAM,CAAC,aAAD,CAAtB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE;YAAK,SAAS,EAAEA,MAAM,CAAC,cAAD,CAAtB;YAAA,UAAyCa;UAAzC;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAUE;UACE,SAAS,EAAEb,MAAM,CAAC,aAAD,CADnB;UAEE,KAAK,EAAE;YAAEsG,QAAQ,EAAEnE,SAAS,IAAIJ,MAAb,GAAsB,OAAtB,GAAgC;UAA5C,CAFT;UAGE,OAAO,EAAE,MAAM;YACbY,UAAU,CAACI,OAAX,CAAoBC,EAAD,IAAQ;cACzBA,EAAE,CAACuD,IAAH;YACD,CAFD;;YAGA,IAAIxE,MAAM,IAAII,SAAd,EAAyB;cACvBW,OAAO;YACR,CAFD,MAEO;cACL1C,QAAQ,CAAC,IAAD,CAAR;YACD;UACF,CAZH;UAAA,UAcG2B,MAAM,IAAII,SAAV,GAAsB,SAAtB,GAAkC;QAdrC;UAAA;UAAA;UAAA;QAAA,QAVF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eA8BE;QAAK,SAAS,EAAEnC,MAAM,CAACwG,MAAvB;QAAA,UACGzE,MAAM,GACH,EADG,GAEHE,SAAS,GACTpB,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,EAAzB,IAA+BA,KAAK,KAAK,EAAzC,GACE,SADF,GAEE,UAHO,GAITV,KAAK,KACJkC,SAAS,KAAK,CAAd,GAAkB,QAAlB,GAA6BA,SAAS,KAAK,CAAd,IAAmBA,SAD5C;MAPX;QAAA;QAAA;QAAA;MAAA,QA9BF,eAwCE;QAAK,SAAS,EAAErC,MAAM,CAACyG,KAAvB;QAAA,UAA+BZ,aAAa;MAA5C;QAAA;QAAA;QAAA;MAAA,QAxCF;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2DD;;GA3cQ3F,G;;KAAAA,G;AA6cT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}